version: '3'
services:
  collector-gateway:
    image: otel/opentelemetry-collector-contrib:0.29.0
    volumes: 
      - ./config/collector-gateway.yml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4318:4318"   # OTLP HTTP receiver
      - "4317:4317"   # OTLP gRPC receiver
      - "55670:55679" # zpages extension

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"

  jaeger:
    image: jaegertracing/all-in-one:1.31
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elastic:9200
    ports:
      - 5775:5775 # UDP:AGENT:accept zipkin.thrift over compact thrift protocol (deprecated, used by legacy clients only)
      - 6831:6831 # UDP:AGENT:accept jaeger.thrift over compact thrift protocol
      - 6832:6832 # UDP:AGENT:accept jaeger.thrift over binary thrift protocol
      - 5778:5778 # HTTP:AGENT:serve configs
      - 16686:16686 # HTTP:QUERY:serve frontend
      - 14268:14268 # HTTP:collector:accept jaeger.thrift directly from clients
      - 14250:14250 # HTTP:collector:accept model.proto
      - 9411:9411 # HTTP:collector:Zipkin compatible endpoint (optional)
    deploy:
      restart_policy: # bad workaround, just to simplify the demo.As elasticsearch will take same time to deploy
        condition: on-failure
      
  
  